// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.31.1
// source: plugin.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *****************************************************************************************************
// This file is auto-generated from source files in `/lib/.proto/*` using Protocol Buffers (protobuf)
//
// Protobuf is a language-neutral, platform-neutral serialization format. It allows users
// to define objects in a way thatâ€™s both efficient to store and fast to transmit over the network.
// These definitions are compiled into code that *enables different systems and programming languages
// to communicate in a byte-perfect manner*
//
// To update these structures, make changes to the source .proto files, then recompile
// to regenerate this file.
// These auto-generated files are easily recognized by checking for a `.pb.go` ending
// *****************************************************************************************************
// _
// _
// _
// FSMToPlugin is the outbound message to the plugin from the main FSM (fsm -> plugin)
type FSMToPlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id: the unique ID of the request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// payload: the payload of the message
	//
	// Types that are assignable to Payload:
	//
	//	*FSMToPlugin_Config
	//	*FSMToPlugin_Genesis
	//	*FSMToPlugin_Begin
	//	*FSMToPlugin_Check
	//	*FSMToPlugin_Deliver
	//	*FSMToPlugin_End
	//	*FSMToPlugin_StateRead
	//	*FSMToPlugin_StateWrite
	//	*FSMToPlugin_Error
	Payload isFSMToPlugin_Payload `protobuf_oneof:"payload"`
}

func (x *FSMToPlugin) Reset() {
	*x = FSMToPlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSMToPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSMToPlugin) ProtoMessage() {}

func (x *FSMToPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSMToPlugin.ProtoReflect.Descriptor instead.
func (*FSMToPlugin) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *FSMToPlugin) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *FSMToPlugin) GetPayload() isFSMToPlugin_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *FSMToPlugin) GetConfig() *PluginFSMConfig {
	if x, ok := x.GetPayload().(*FSMToPlugin_Config); ok {
		return x.Config
	}
	return nil
}

func (x *FSMToPlugin) GetGenesis() *PluginGenesisRequest {
	if x, ok := x.GetPayload().(*FSMToPlugin_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (x *FSMToPlugin) GetBegin() *PluginBeginRequest {
	if x, ok := x.GetPayload().(*FSMToPlugin_Begin); ok {
		return x.Begin
	}
	return nil
}

func (x *FSMToPlugin) GetCheck() *PluginCheckRequest {
	if x, ok := x.GetPayload().(*FSMToPlugin_Check); ok {
		return x.Check
	}
	return nil
}

func (x *FSMToPlugin) GetDeliver() *PluginDeliverRequest {
	if x, ok := x.GetPayload().(*FSMToPlugin_Deliver); ok {
		return x.Deliver
	}
	return nil
}

func (x *FSMToPlugin) GetEnd() *PluginEndRequest {
	if x, ok := x.GetPayload().(*FSMToPlugin_End); ok {
		return x.End
	}
	return nil
}

func (x *FSMToPlugin) GetStateRead() *PluginStateReadResponse {
	if x, ok := x.GetPayload().(*FSMToPlugin_StateRead); ok {
		return x.StateRead
	}
	return nil
}

func (x *FSMToPlugin) GetStateWrite() *PluginStateWriteResponse {
	if x, ok := x.GetPayload().(*FSMToPlugin_StateWrite); ok {
		return x.StateWrite
	}
	return nil
}

func (x *FSMToPlugin) GetError() *PluginError {
	if x, ok := x.GetPayload().(*FSMToPlugin_Error); ok {
		return x.Error
	}
	return nil
}

type isFSMToPlugin_Payload interface {
	isFSMToPlugin_Payload()
}

type FSMToPlugin_Config struct {
	// config: the response to the plugin config message
	Config *PluginFSMConfig `protobuf:"bytes,2,opt,name=config,proto3,oneof"`
}

type FSMToPlugin_Genesis struct {
	// genesis: request to execute genesis logic on the plugin
	Genesis *PluginGenesisRequest `protobuf:"bytes,3,opt,name=genesis,proto3,oneof"`
}

type FSMToPlugin_Begin struct {
	// begin: request to execute 'begin block' logic on the plugin
	Begin *PluginBeginRequest `protobuf:"bytes,4,opt,name=begin,proto3,oneof"`
}

type FSMToPlugin_Check struct {
	// check: request to execute minimum logic to validate the transaction
	Check *PluginCheckRequest `protobuf:"bytes,5,opt,name=check,proto3,oneof"`
}

type FSMToPlugin_Deliver struct {
	// deliver: request to execute 'deliver tx' logic on the plugin
	Deliver *PluginDeliverRequest `protobuf:"bytes,6,opt,name=deliver,proto3,oneof"`
}

type FSMToPlugin_End struct {
	// end: request to execute 'end block' logic on the plugin
	End *PluginEndRequest `protobuf:"bytes,7,opt,name=end,proto3,oneof"`
}

type FSMToPlugin_StateRead struct {
	// state_read: response with read state data
	StateRead *PluginStateReadResponse `protobuf:"bytes,8,opt,name=state_read,json=stateRead,proto3,oneof"`
}

type FSMToPlugin_StateWrite struct {
	// state_write: acknowledgment of write operation
	StateWrite *PluginStateWriteResponse `protobuf:"bytes,9,opt,name=state_write,json=stateWrite,proto3,oneof"`
}

type FSMToPlugin_Error struct {
	// error: any error returned by the FSM
	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3,oneof"`
}

func (*FSMToPlugin_Config) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_Genesis) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_Begin) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_Check) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_Deliver) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_End) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_StateRead) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_StateWrite) isFSMToPlugin_Payload() {}

func (*FSMToPlugin_Error) isFSMToPlugin_Payload() {}

// PluginToFSM is the outbound message from the plugin to the FSM (plugin -> fsm)
type PluginToFSM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id: the unique ID of the request
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// payload: the payload of the message
	//
	// Types that are assignable to Payload:
	//
	//	*PluginToFSM_Config
	//	*PluginToFSM_Genesis
	//	*PluginToFSM_Begin
	//	*PluginToFSM_Check
	//	*PluginToFSM_Deliver
	//	*PluginToFSM_End
	//	*PluginToFSM_StateRead
	//	*PluginToFSM_StateWrite
	Payload isPluginToFSM_Payload `protobuf_oneof:"payload"`
}

func (x *PluginToFSM) Reset() {
	*x = PluginToFSM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginToFSM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginToFSM) ProtoMessage() {}

func (x *PluginToFSM) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginToFSM.ProtoReflect.Descriptor instead.
func (*PluginToFSM) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *PluginToFSM) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *PluginToFSM) GetPayload() isPluginToFSM_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *PluginToFSM) GetConfig() *PluginConfig {
	if x, ok := x.GetPayload().(*PluginToFSM_Config); ok {
		return x.Config
	}
	return nil
}

func (x *PluginToFSM) GetGenesis() *PluginGenesisResponse {
	if x, ok := x.GetPayload().(*PluginToFSM_Genesis); ok {
		return x.Genesis
	}
	return nil
}

func (x *PluginToFSM) GetBegin() *PluginBeginResponse {
	if x, ok := x.GetPayload().(*PluginToFSM_Begin); ok {
		return x.Begin
	}
	return nil
}

func (x *PluginToFSM) GetCheck() *PluginCheckResponse {
	if x, ok := x.GetPayload().(*PluginToFSM_Check); ok {
		return x.Check
	}
	return nil
}

func (x *PluginToFSM) GetDeliver() *PluginDeliverResponse {
	if x, ok := x.GetPayload().(*PluginToFSM_Deliver); ok {
		return x.Deliver
	}
	return nil
}

func (x *PluginToFSM) GetEnd() *PluginEndResponse {
	if x, ok := x.GetPayload().(*PluginToFSM_End); ok {
		return x.End
	}
	return nil
}

func (x *PluginToFSM) GetStateRead() *PluginStateReadRequest {
	if x, ok := x.GetPayload().(*PluginToFSM_StateRead); ok {
		return x.StateRead
	}
	return nil
}

func (x *PluginToFSM) GetStateWrite() *PluginStateWriteRequest {
	if x, ok := x.GetPayload().(*PluginToFSM_StateWrite); ok {
		return x.StateWrite
	}
	return nil
}

type isPluginToFSM_Payload interface {
	isPluginToFSM_Payload()
}

type PluginToFSM_Config struct {
	// config: the request to initialize the plugin
	Config *PluginConfig `protobuf:"bytes,2,opt,name=config,proto3,oneof"`
}

type PluginToFSM_Genesis struct {
	// genesis: response to the genesis request
	Genesis *PluginGenesisResponse `protobuf:"bytes,3,opt,name=genesis,proto3,oneof"`
}

type PluginToFSM_Begin struct {
	// begin: response to the begin block request
	Begin *PluginBeginResponse `protobuf:"bytes,4,opt,name=begin,proto3,oneof"`
}

type PluginToFSM_Check struct {
	// check: response to the check tx request
	Check *PluginCheckResponse `protobuf:"bytes,5,opt,name=check,proto3,oneof"`
}

type PluginToFSM_Deliver struct {
	// deliver: response to the deliver tx request
	Deliver *PluginDeliverResponse `protobuf:"bytes,6,opt,name=deliver,proto3,oneof"`
}

type PluginToFSM_End struct {
	// end: response to the end block request
	End *PluginEndResponse `protobuf:"bytes,7,opt,name=end,proto3,oneof"`
}

type PluginToFSM_StateRead struct {
	// state_read: request to read plugin state from the FSM
	StateRead *PluginStateReadRequest `protobuf:"bytes,8,opt,name=state_read,json=stateRead,proto3,oneof"`
}

type PluginToFSM_StateWrite struct {
	// state_write: request to write plugin state to the FSM
	StateWrite *PluginStateWriteRequest `protobuf:"bytes,9,opt,name=state_write,json=stateWrite,proto3,oneof"`
}

func (*PluginToFSM_Config) isPluginToFSM_Payload() {}

func (*PluginToFSM_Genesis) isPluginToFSM_Payload() {}

func (*PluginToFSM_Begin) isPluginToFSM_Payload() {}

func (*PluginToFSM_Check) isPluginToFSM_Payload() {}

func (*PluginToFSM_Deliver) isPluginToFSM_Payload() {}

func (*PluginToFSM_End) isPluginToFSM_Payload() {}

func (*PluginToFSM_StateRead) isPluginToFSM_Payload() {}

func (*PluginToFSM_StateWrite) isPluginToFSM_Payload() {}

// PluginConfig is the identity information of the plugin that is communicated to the fsm
type PluginConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name: the name of the plugin
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// id: the unique identifier of the plugin
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// version: the version of the plugin
	Version uint64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// supported_transactions: a list of custom transaction names that are supported
	SupportedTransactions []string `protobuf:"bytes,4,rep,name=supported_transactions,json=supportedTransactions,proto3" json:"supported_transactions,omitempty"`
}

func (x *PluginConfig) Reset() {
	*x = PluginConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginConfig) ProtoMessage() {}

func (x *PluginConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginConfig.ProtoReflect.Descriptor instead.
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *PluginConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginConfig) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginConfig) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PluginConfig) GetSupportedTransactions() []string {
	if x != nil {
		return x.SupportedTransactions
	}
	return nil
}

// PluginFSMConfig is the identity information of the plugin that is communicated from the fsm to the plugin
type PluginFSMConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *PluginConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *PluginFSMConfig) Reset() {
	*x = PluginFSMConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginFSMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginFSMConfig) ProtoMessage() {}

func (x *PluginFSMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginFSMConfig.ProtoReflect.Descriptor instead.
func (*PluginFSMConfig) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *PluginFSMConfig) GetConfig() *PluginConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// PluginGenesisRequest carries genesis JSON data for initialization
type PluginGenesisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenesisJson []byte `protobuf:"bytes,1,opt,name=genesis_json,json=genesisJson,proto3" json:"genesis_json,omitempty"`
}

func (x *PluginGenesisRequest) Reset() {
	*x = PluginGenesisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginGenesisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGenesisRequest) ProtoMessage() {}

func (x *PluginGenesisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGenesisRequest.ProtoReflect.Descriptor instead.
func (*PluginGenesisRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *PluginGenesisRequest) GetGenesisJson() []byte {
	if x != nil {
		return x.GenesisJson
	}
	return nil
}

// PluginGenesisResponse acknowledges genesis execution completion
type PluginGenesisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginGenesisResponse) Reset() {
	*x = PluginGenesisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginGenesisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGenesisResponse) ProtoMessage() {}

func (x *PluginGenesisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGenesisResponse.ProtoReflect.Descriptor instead.
func (*PluginGenesisResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *PluginGenesisResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginBeginRequest signals start of a new block
type PluginBeginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PluginBeginRequest) Reset() {
	*x = PluginBeginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginBeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginBeginRequest) ProtoMessage() {}

func (x *PluginBeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginBeginRequest.ProtoReflect.Descriptor instead.
func (*PluginBeginRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *PluginBeginRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// PluginBeginResponse acknowledges begin block execution
type PluginBeginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginBeginResponse) Reset() {
	*x = PluginBeginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginBeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginBeginResponse) ProtoMessage() {}

func (x *PluginBeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginBeginResponse.ProtoReflect.Descriptor instead.
func (*PluginBeginResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *PluginBeginResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginCheckRequest carries a transaction to be checked
type PluginCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx *Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *PluginCheckRequest) Reset() {
	*x = PluginCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCheckRequest) ProtoMessage() {}

func (x *PluginCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCheckRequest.ProtoReflect.Descriptor instead.
func (*PluginCheckRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *PluginCheckRequest) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// PluginCheckResponse acknowledges transaction check
type PluginCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authorized_signers: addresses who are authorized to sign the transaction
	AuthorizedSigners [][]byte `protobuf:"bytes,1,rep,name=authorized_signers,json=authorizedSigners,proto3" json:"authorizedSigners"` // @gotags: json:"authorizedSigners"
	// recipient: address of the recipient of the transaction (nil if not applicable)
	Recipient []byte `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// error: an error occurred when checking the transaction
	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginCheckResponse) Reset() {
	*x = PluginCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCheckResponse) ProtoMessage() {}

func (x *PluginCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCheckResponse.ProtoReflect.Descriptor instead.
func (*PluginCheckResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *PluginCheckResponse) GetAuthorizedSigners() [][]byte {
	if x != nil {
		return x.AuthorizedSigners
	}
	return nil
}

func (x *PluginCheckResponse) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *PluginCheckResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginDeliverRequest carries a transaction to be processed
type PluginDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx *Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *PluginDeliverRequest) Reset() {
	*x = PluginDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDeliverRequest) ProtoMessage() {}

func (x *PluginDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDeliverRequest.ProtoReflect.Descriptor instead.
func (*PluginDeliverRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *PluginDeliverRequest) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

// PluginDeliverResponse acknowledges transaction delivery
type PluginDeliverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginDeliverResponse) Reset() {
	*x = PluginDeliverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginDeliverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDeliverResponse) ProtoMessage() {}

func (x *PluginDeliverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDeliverResponse.ProtoReflect.Descriptor instead.
func (*PluginDeliverResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *PluginDeliverResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginEndRequest signals end of the current block
type PluginEndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height          uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	ProposerAddress []byte `protobuf:"bytes,2,opt,name=proposer_address,json=proposerAddress,proto3" json:"proposer_address,omitempty"`
}

func (x *PluginEndRequest) Reset() {
	*x = PluginEndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginEndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginEndRequest) ProtoMessage() {}

func (x *PluginEndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginEndRequest.ProtoReflect.Descriptor instead.
func (*PluginEndRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *PluginEndRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PluginEndRequest) GetProposerAddress() []byte {
	if x != nil {
		return x.ProposerAddress
	}
	return nil
}

// PluginEndResponse acknowledges end block execution
type PluginEndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginEndResponse) Reset() {
	*x = PluginEndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginEndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginEndResponse) ProtoMessage() {}

func (x *PluginEndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginEndResponse.ProtoReflect.Descriptor instead.
func (*PluginEndResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *PluginEndResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginError carries error details from plugin or FSM
type PluginError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`    // error code
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"` // error module
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`       // error message
}

func (x *PluginError) Reset() {
	*x = PluginError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginError) ProtoMessage() {}

func (x *PluginError) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginError.ProtoReflect.Descriptor instead.
func (*PluginError) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *PluginError) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PluginError) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *PluginError) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PluginStateReadRequest allows batching multiple key or range reads in one call
type PluginStateReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys: explicit keys to read
	Keys []*PluginKeyRead `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	// ranges: key ranges to iterate over and read
	Ranges []*PluginRangeRead `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
}

func (x *PluginStateReadRequest) Reset() {
	*x = PluginStateReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStateReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateReadRequest) ProtoMessage() {}

func (x *PluginStateReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateReadRequest.ProtoReflect.Descriptor instead.
func (*PluginStateReadRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *PluginStateReadRequest) GetKeys() []*PluginKeyRead {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PluginStateReadRequest) GetRanges() []*PluginRangeRead {
	if x != nil {
		return x.Ranges
	}
	return nil
}

// PluginKeyRead requests a single key read, identified by query_id
type PluginKeyRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query_id to correlate requests and responses
	QueryId uint64 `protobuf:"varint,1,opt,name=query_id,json=queryId,proto3" json:"queryId"` // @gotags: json:"queryId"
	// key to read from state
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PluginKeyRead) Reset() {
	*x = PluginKeyRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginKeyRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginKeyRead) ProtoMessage() {}

func (x *PluginKeyRead) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginKeyRead.ProtoReflect.Descriptor instead.
func (*PluginKeyRead) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *PluginKeyRead) GetQueryId() uint64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *PluginKeyRead) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// PluginRangeRead requests an iteration over a key range with optional limits and direction
type PluginRangeRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query_id to correlate requests and responses
	QueryId uint64 `protobuf:"varint,1,opt,name=query_id,json=queryId,proto3" json:"queryId"` // @gotags: json:"queryId"
	// prefix: the prefix to iterate over
	Prefix []byte `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// limit: maximum number of entries to return
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// reverse: whether to iterate in reverse order
	Reverse bool `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *PluginRangeRead) Reset() {
	*x = PluginRangeRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginRangeRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRangeRead) ProtoMessage() {}

func (x *PluginRangeRead) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRangeRead.ProtoReflect.Descriptor instead.
func (*PluginRangeRead) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{17}
}

func (x *PluginRangeRead) GetQueryId() uint64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *PluginRangeRead) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *PluginRangeRead) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PluginRangeRead) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

// PluginStateReadResponse returns the results for the read requests
type PluginStateReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// results hold multiple query results matching requests by query_id
	Results []*PluginReadResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// error: if an error occurred during the request execution
	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginStateReadResponse) Reset() {
	*x = PluginStateReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStateReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateReadResponse) ProtoMessage() {}

func (x *PluginStateReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateReadResponse.ProtoReflect.Descriptor instead.
func (*PluginStateReadResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{18}
}

func (x *PluginStateReadResponse) GetResults() []*PluginReadResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PluginStateReadResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginReadResult holds the result entries for a specific read query
type PluginReadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query_id: matching the original read request
	QueryId uint64 `protobuf:"varint,1,opt,name=query_id,json=queryId,proto3" json:"queryId"` // @gotags: json:"queryId"
	// entries: returned for this query
	Entries []*PluginStateEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PluginReadResult) Reset() {
	*x = PluginReadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginReadResult) ProtoMessage() {}

func (x *PluginReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginReadResult.ProtoReflect.Descriptor instead.
func (*PluginReadResult) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{19}
}

func (x *PluginReadResult) GetQueryId() uint64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *PluginReadResult) GetEntries() []*PluginStateEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// PluginStateWriteRequest batches multiple set and delete operations in one call
type PluginStateWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sets: keys and values to write to state
	Sets []*PluginSetOp `protobuf:"bytes,1,rep,name=sets,proto3" json:"sets,omitempty"`
	// deletes: keys to remove from state
	Deletes []*PluginDeleteOp `protobuf:"bytes,2,rep,name=deletes,proto3" json:"deletes,omitempty"`
}

func (x *PluginStateWriteRequest) Reset() {
	*x = PluginStateWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStateWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateWriteRequest) ProtoMessage() {}

func (x *PluginStateWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateWriteRequest.ProtoReflect.Descriptor instead.
func (*PluginStateWriteRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{20}
}

func (x *PluginStateWriteRequest) GetSets() []*PluginSetOp {
	if x != nil {
		return x.Sets
	}
	return nil
}

func (x *PluginStateWriteRequest) GetDeletes() []*PluginDeleteOp {
	if x != nil {
		return x.Deletes
	}
	return nil
}

// PluginStateWriteResponse acknowledges successful write operations
type PluginStateWriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error: if an error occurred during the request execution
	Error *PluginError `protobuf:"bytes,99,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PluginStateWriteResponse) Reset() {
	*x = PluginStateWriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStateWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateWriteResponse) ProtoMessage() {}

func (x *PluginStateWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateWriteResponse.ProtoReflect.Descriptor instead.
func (*PluginStateWriteResponse) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{21}
}

func (x *PluginStateWriteResponse) GetError() *PluginError {
	if x != nil {
		return x.Error
	}
	return nil
}

// PluginSetOp represents a key/value pair to set in state
type PluginSetOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key: is the 'key' associated with the value in the KV pair for the set op
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// key: is the 'value' associated with the value in the KV pair for the set op
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PluginSetOp) Reset() {
	*x = PluginSetOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSetOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSetOp) ProtoMessage() {}

func (x *PluginSetOp) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSetOp.ProtoReflect.Descriptor instead.
func (*PluginSetOp) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{22}
}

func (x *PluginSetOp) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PluginSetOp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// PluginDeleteOp represents a key to delete from state
type PluginDeleteOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key: is the 'key' associated with the value in the KV pair for the delete op
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PluginDeleteOp) Reset() {
	*x = PluginDeleteOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginDeleteOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginDeleteOp) ProtoMessage() {}

func (x *PluginDeleteOp) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginDeleteOp.ProtoReflect.Descriptor instead.
func (*PluginDeleteOp) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{23}
}

func (x *PluginDeleteOp) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// PluginStateEntry represents a key/value pair returned in read results
type PluginStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key: is the 'key' associated with the value in the KV pair for the 'get' op
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// value: is the 'value' associated with the value in the KV pair for the 'get' op
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PluginStateEntry) Reset() {
	*x = PluginStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStateEntry) ProtoMessage() {}

func (x *PluginStateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStateEntry.ProtoReflect.Descriptor instead.
func (*PluginStateEntry) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{24}
}

func (x *PluginStateEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PluginStateEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_plugin_proto protoreflect.FileDescriptor

var file_plugin_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x08, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x90, 0x04, 0x0a, 0x0b, 0x46, 0x53, 0x4d, 0x54, 0x6f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x46, 0x53,
	0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x37, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x31, 0x0a,
	0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x37, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x42, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0xe4, 0x03, 0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x46,
	0x53, 0x4d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x38, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12,
	0x32, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x3e, 0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x46, 0x53, 0x4d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x39, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x67,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x15, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2c, 0x0a,
	0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3f, 0x0a, 0x13, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x12,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74,
	0x78, 0x22, 0x41, 0x0a, 0x15, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x55, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4b, 0x0a, 0x0b, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x72, 0x0a, 0x16, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x74, 0x0a, 0x0f, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22,
	0x76, 0x0a, 0x17, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x17, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x70, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x22, 0x44, 0x0a,
	0x18, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x35, 0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74,
	0x4f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x22, 0x0a, 0x0e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3a,
	0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x6e, 0x6f, 0x70, 0x79, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x61, 0x6e, 0x6f, 0x70, 0x79, 0x2f, 0x6c,
	0x69, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData = file_plugin_proto_rawDesc
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_proto_rawDescData)
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_plugin_proto_goTypes = []any{
	(*FSMToPlugin)(nil),              // 0: types.FSMToPlugin
	(*PluginToFSM)(nil),              // 1: types.PluginToFSM
	(*PluginConfig)(nil),             // 2: types.PluginConfig
	(*PluginFSMConfig)(nil),          // 3: types.PluginFSMConfig
	(*PluginGenesisRequest)(nil),     // 4: types.PluginGenesisRequest
	(*PluginGenesisResponse)(nil),    // 5: types.PluginGenesisResponse
	(*PluginBeginRequest)(nil),       // 6: types.PluginBeginRequest
	(*PluginBeginResponse)(nil),      // 7: types.PluginBeginResponse
	(*PluginCheckRequest)(nil),       // 8: types.PluginCheckRequest
	(*PluginCheckResponse)(nil),      // 9: types.PluginCheckResponse
	(*PluginDeliverRequest)(nil),     // 10: types.PluginDeliverRequest
	(*PluginDeliverResponse)(nil),    // 11: types.PluginDeliverResponse
	(*PluginEndRequest)(nil),         // 12: types.PluginEndRequest
	(*PluginEndResponse)(nil),        // 13: types.PluginEndResponse
	(*PluginError)(nil),              // 14: types.PluginError
	(*PluginStateReadRequest)(nil),   // 15: types.PluginStateReadRequest
	(*PluginKeyRead)(nil),            // 16: types.PluginKeyRead
	(*PluginRangeRead)(nil),          // 17: types.PluginRangeRead
	(*PluginStateReadResponse)(nil),  // 18: types.PluginStateReadResponse
	(*PluginReadResult)(nil),         // 19: types.PluginReadResult
	(*PluginStateWriteRequest)(nil),  // 20: types.PluginStateWriteRequest
	(*PluginStateWriteResponse)(nil), // 21: types.PluginStateWriteResponse
	(*PluginSetOp)(nil),              // 22: types.PluginSetOp
	(*PluginDeleteOp)(nil),           // 23: types.PluginDeleteOp
	(*PluginStateEntry)(nil),         // 24: types.PluginStateEntry
	(*Transaction)(nil),              // 25: types.Transaction
}
var file_plugin_proto_depIdxs = []int32{
	3,  // 0: types.FSMToPlugin.config:type_name -> types.PluginFSMConfig
	4,  // 1: types.FSMToPlugin.genesis:type_name -> types.PluginGenesisRequest
	6,  // 2: types.FSMToPlugin.begin:type_name -> types.PluginBeginRequest
	8,  // 3: types.FSMToPlugin.check:type_name -> types.PluginCheckRequest
	10, // 4: types.FSMToPlugin.deliver:type_name -> types.PluginDeliverRequest
	12, // 5: types.FSMToPlugin.end:type_name -> types.PluginEndRequest
	18, // 6: types.FSMToPlugin.state_read:type_name -> types.PluginStateReadResponse
	21, // 7: types.FSMToPlugin.state_write:type_name -> types.PluginStateWriteResponse
	14, // 8: types.FSMToPlugin.error:type_name -> types.PluginError
	2,  // 9: types.PluginToFSM.config:type_name -> types.PluginConfig
	5,  // 10: types.PluginToFSM.genesis:type_name -> types.PluginGenesisResponse
	7,  // 11: types.PluginToFSM.begin:type_name -> types.PluginBeginResponse
	9,  // 12: types.PluginToFSM.check:type_name -> types.PluginCheckResponse
	11, // 13: types.PluginToFSM.deliver:type_name -> types.PluginDeliverResponse
	13, // 14: types.PluginToFSM.end:type_name -> types.PluginEndResponse
	15, // 15: types.PluginToFSM.state_read:type_name -> types.PluginStateReadRequest
	20, // 16: types.PluginToFSM.state_write:type_name -> types.PluginStateWriteRequest
	2,  // 17: types.PluginFSMConfig.config:type_name -> types.PluginConfig
	14, // 18: types.PluginGenesisResponse.error:type_name -> types.PluginError
	14, // 19: types.PluginBeginResponse.error:type_name -> types.PluginError
	25, // 20: types.PluginCheckRequest.tx:type_name -> types.Transaction
	14, // 21: types.PluginCheckResponse.error:type_name -> types.PluginError
	25, // 22: types.PluginDeliverRequest.tx:type_name -> types.Transaction
	14, // 23: types.PluginDeliverResponse.error:type_name -> types.PluginError
	14, // 24: types.PluginEndResponse.error:type_name -> types.PluginError
	16, // 25: types.PluginStateReadRequest.keys:type_name -> types.PluginKeyRead
	17, // 26: types.PluginStateReadRequest.ranges:type_name -> types.PluginRangeRead
	19, // 27: types.PluginStateReadResponse.results:type_name -> types.PluginReadResult
	14, // 28: types.PluginStateReadResponse.error:type_name -> types.PluginError
	24, // 29: types.PluginReadResult.entries:type_name -> types.PluginStateEntry
	22, // 30: types.PluginStateWriteRequest.sets:type_name -> types.PluginSetOp
	23, // 31: types.PluginStateWriteRequest.deletes:type_name -> types.PluginDeleteOp
	14, // 32: types.PluginStateWriteResponse.error:type_name -> types.PluginError
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	file_tx_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_plugin_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FSMToPlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PluginToFSM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PluginConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PluginFSMConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PluginGenesisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PluginGenesisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PluginBeginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PluginBeginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PluginCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PluginCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PluginDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PluginDeliverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PluginEndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PluginEndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PluginError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PluginStateReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PluginKeyRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PluginRangeRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PluginStateReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PluginReadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PluginStateWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PluginStateWriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PluginSetOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PluginDeleteOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PluginStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugin_proto_msgTypes[0].OneofWrappers = []any{
		(*FSMToPlugin_Config)(nil),
		(*FSMToPlugin_Genesis)(nil),
		(*FSMToPlugin_Begin)(nil),
		(*FSMToPlugin_Check)(nil),
		(*FSMToPlugin_Deliver)(nil),
		(*FSMToPlugin_End)(nil),
		(*FSMToPlugin_StateRead)(nil),
		(*FSMToPlugin_StateWrite)(nil),
		(*FSMToPlugin_Error)(nil),
	}
	file_plugin_proto_msgTypes[1].OneofWrappers = []any{
		(*PluginToFSM_Config)(nil),
		(*PluginToFSM_Genesis)(nil),
		(*PluginToFSM_Begin)(nil),
		(*PluginToFSM_Check)(nil),
		(*PluginToFSM_Deliver)(nil),
		(*PluginToFSM_End)(nil),
		(*PluginToFSM_StateRead)(nil),
		(*PluginToFSM_StateWrite)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_rawDesc = nil
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}
