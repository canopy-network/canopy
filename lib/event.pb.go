// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: event.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// event_type: The type of the transaction like 'slash' or 'unstake'
	EventType string `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"eventType"` // @gotags: json:"eventType"
	// msg: The actual event message payload, which is encapsulated in a oneof format
	//
	// Types that are valid to be assigned to Msg:
	//
	//	*Event_Reward
	//	*Event_Slash
	//	*Event_DexLiquidityDeposit
	//	*Event_DexLiquidityWithdraw
	//	*Event_DexSwap
	//	*Event_OrderBookSwap
	//	*Event_AutoPause
	//	*Event_AutoBeginUnstaking
	//	*Event_FinishUnstaking
	Msg isEvent_Msg `protobuf_oneof:"msg"`
	// height: the block height of the event
	Height uint64 `protobuf:"varint,91,opt,name=height,proto3" json:"height,omitempty"`
	// reference: the 'begin_block' / transaction hash / 'end_block'
	Reference string `protobuf:"bytes,92,opt,name=reference,proto3" json:"reference,omitempty"`
	// chainId: the chain id associated with the event
	ChainId uint64 `protobuf:"varint,93,opt,name=chainId,proto3" json:"chainId,omitempty"`
	// block_height: the number of blocks in the blockchain before a specific block, indicating its position in the chain
	// and representing the blockchain's length
	BlockHeight uint64 `protobuf:"varint,94,opt,name=block_height,json=blockHeight,proto3" json:"blockHeight"` // @gotags: json:"blockHeight"
	// block_hash: a unique identifier for a block, generated by applying a cryptographic hash function to the block's contents,
	// ensuring its integrity and connecting it to the previous block in the chain.
	BlockHash []byte `protobuf:"bytes,95,opt,name=block_hash,json=blockHash,proto3" json:"blockHash"` // @gotags: json:"blockHash"
	// address: The address of the user affected by the event
	Address       []byte `protobuf:"bytes,96,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Event) GetMsg() isEvent_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Event) GetReward() *EventReward {
	if x != nil {
		if x, ok := x.Msg.(*Event_Reward); ok {
			return x.Reward
		}
	}
	return nil
}

func (x *Event) GetSlash() *EventSlash {
	if x != nil {
		if x, ok := x.Msg.(*Event_Slash); ok {
			return x.Slash
		}
	}
	return nil
}

func (x *Event) GetDexLiquidityDeposit() *EventDexLiquidityDeposit {
	if x != nil {
		if x, ok := x.Msg.(*Event_DexLiquidityDeposit); ok {
			return x.DexLiquidityDeposit
		}
	}
	return nil
}

func (x *Event) GetDexLiquidityWithdraw() *EventDexLiquidityWithdraw {
	if x != nil {
		if x, ok := x.Msg.(*Event_DexLiquidityWithdraw); ok {
			return x.DexLiquidityWithdraw
		}
	}
	return nil
}

func (x *Event) GetDexSwap() *EventDexSwap {
	if x != nil {
		if x, ok := x.Msg.(*Event_DexSwap); ok {
			return x.DexSwap
		}
	}
	return nil
}

func (x *Event) GetOrderBookSwap() *EventOrderBookSwap {
	if x != nil {
		if x, ok := x.Msg.(*Event_OrderBookSwap); ok {
			return x.OrderBookSwap
		}
	}
	return nil
}

func (x *Event) GetAutoPause() *EventAutoPause {
	if x != nil {
		if x, ok := x.Msg.(*Event_AutoPause); ok {
			return x.AutoPause
		}
	}
	return nil
}

func (x *Event) GetAutoBeginUnstaking() *EventAutoBeginUnstaking {
	if x != nil {
		if x, ok := x.Msg.(*Event_AutoBeginUnstaking); ok {
			return x.AutoBeginUnstaking
		}
	}
	return nil
}

func (x *Event) GetFinishUnstaking() *EventFinishUnstaking {
	if x != nil {
		if x, ok := x.Msg.(*Event_FinishUnstaking); ok {
			return x.FinishUnstaking
		}
	}
	return nil
}

func (x *Event) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Event) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Event) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Event) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *Event) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Event) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type isEvent_Msg interface {
	isEvent_Msg()
}

type Event_Reward struct {
	Reward *EventReward `protobuf:"bytes,2,opt,name=reward,proto3,oneof"`
}

type Event_Slash struct {
	Slash *EventSlash `protobuf:"bytes,3,opt,name=slash,proto3,oneof"`
}

type Event_DexLiquidityDeposit struct {
	DexLiquidityDeposit *EventDexLiquidityDeposit `protobuf:"bytes,4,opt,name=dex_liquidity_deposit,json=dexLiquidityDeposit,proto3,oneof"`
}

type Event_DexLiquidityWithdraw struct {
	DexLiquidityWithdraw *EventDexLiquidityWithdraw `protobuf:"bytes,5,opt,name=dex_liquidity_withdraw,json=dexLiquidityWithdraw,proto3,oneof"`
}

type Event_DexSwap struct {
	DexSwap *EventDexSwap `protobuf:"bytes,6,opt,name=dex_swap,json=dexSwap,proto3,oneof"`
}

type Event_OrderBookSwap struct {
	OrderBookSwap *EventOrderBookSwap `protobuf:"bytes,7,opt,name=order_book_swap,json=orderBookSwap,proto3,oneof"`
}

type Event_AutoPause struct {
	AutoPause *EventAutoPause `protobuf:"bytes,8,opt,name=auto_pause,json=autoPause,proto3,oneof"`
}

type Event_AutoBeginUnstaking struct {
	AutoBeginUnstaking *EventAutoBeginUnstaking `protobuf:"bytes,9,opt,name=auto_begin_unstaking,json=autoBeginUnstaking,proto3,oneof"`
}

type Event_FinishUnstaking struct {
	FinishUnstaking *EventFinishUnstaking `protobuf:"bytes,10,opt,name=finish_unstaking,json=finishUnstaking,proto3,oneof"`
}

func (*Event_Reward) isEvent_Msg() {}

func (*Event_Slash) isEvent_Msg() {}

func (*Event_DexLiquidityDeposit) isEvent_Msg() {}

func (*Event_DexLiquidityWithdraw) isEvent_Msg() {}

func (*Event_DexSwap) isEvent_Msg() {}

func (*Event_OrderBookSwap) isEvent_Msg() {}

func (*Event_AutoPause) isEvent_Msg() {}

func (*Event_AutoBeginUnstaking) isEvent_Msg() {}

func (*Event_FinishUnstaking) isEvent_Msg() {}

type EventReward struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount: amount of reward
	Amount        uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventReward) Reset() {
	*x = EventReward{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReward) ProtoMessage() {}

func (x *EventReward) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReward.ProtoReflect.Descriptor instead.
func (*EventReward) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventReward) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type EventSlash struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount: amount of slash
	Amount        uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSlash) Reset() {
	*x = EventSlash{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSlash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSlash) ProtoMessage() {}

func (x *EventSlash) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSlash.ProtoReflect.Descriptor instead.
func (*EventSlash) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventSlash) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type EventDexLiquidityDeposit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount: the deposit amount
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// local_origin: was the deposit made on this chain or the counter
	LocalOrigin   bool `protobuf:"varint,2,opt,name=local_origin,json=localOrigin,proto3" json:"localOrigin"` // @gotags: json:"localOrigin"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDexLiquidityDeposit) Reset() {
	*x = EventDexLiquidityDeposit{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDexLiquidityDeposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDexLiquidityDeposit) ProtoMessage() {}

func (x *EventDexLiquidityDeposit) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDexLiquidityDeposit.ProtoReflect.Descriptor instead.
func (*EventDexLiquidityDeposit) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventDexLiquidityDeposit) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EventDexLiquidityDeposit) GetLocalOrigin() bool {
	if x != nil {
		return x.LocalOrigin
	}
	return false
}

type EventDexLiquidityWithdraw struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// local_amount: the amount of liquidity received on this chain
	LocalAmount uint64 `protobuf:"varint,1,opt,name=local_amount,json=localAmount,proto3" json:"localAmount"` // @gotags: json:"localAmount"
	// counter_amount: the amount of liquidity received on the counter chain
	RemoteAmount  uint64 `protobuf:"varint,2,opt,name=remote_amount,json=remoteAmount,proto3" json:"remoteAmount"` // @gotags: json:"remoteAmount"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDexLiquidityWithdraw) Reset() {
	*x = EventDexLiquidityWithdraw{}
	mi := &file_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDexLiquidityWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDexLiquidityWithdraw) ProtoMessage() {}

func (x *EventDexLiquidityWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDexLiquidityWithdraw.ProtoReflect.Descriptor instead.
func (*EventDexLiquidityWithdraw) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

func (x *EventDexLiquidityWithdraw) GetLocalAmount() uint64 {
	if x != nil {
		return x.LocalAmount
	}
	return 0
}

func (x *EventDexLiquidityWithdraw) GetRemoteAmount() uint64 {
	if x != nil {
		return x.RemoteAmount
	}
	return 0
}

type EventDexSwap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sold_amount: amount sold
	SoldAmount uint64 `protobuf:"varint,1,opt,name=sold_amount,json=soldAmount,proto3" json:"soldAmount"` // @gotags: json:"soldAmount"
	// bought_amount: amount purchased
	BoughtAmount uint64 `protobuf:"varint,2,opt,name=bought_amount,json=boughtAmount,proto3" json:"boughtAmount"` // @gotags: json:"boughtAmount"
	// local_origin: did the user sell on this chain and receive tokens on the remote chain
	LocalOrigin bool `protobuf:"varint,3,opt,name=local_origin,json=localOrigin,proto3" json:"localOrigin"` // @gotags: json:"localOrigin"
	// success: did the swap succeed
	Success       bool `protobuf:"varint,4,opt,name=success,proto3" json:"success"` // @gotags: json:"success"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDexSwap) Reset() {
	*x = EventDexSwap{}
	mi := &file_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDexSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDexSwap) ProtoMessage() {}

func (x *EventDexSwap) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDexSwap.ProtoReflect.Descriptor instead.
func (*EventDexSwap) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventDexSwap) GetSoldAmount() uint64 {
	if x != nil {
		return x.SoldAmount
	}
	return 0
}

func (x *EventDexSwap) GetBoughtAmount() uint64 {
	if x != nil {
		return x.BoughtAmount
	}
	return 0
}

func (x *EventDexSwap) GetLocalOrigin() bool {
	if x != nil {
		return x.LocalOrigin
	}
	return false
}

func (x *EventDexSwap) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type EventOrderBookSwap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sold_amount: amount sold
	SoldAmount uint64 `protobuf:"varint,1,opt,name=sold_amount,json=soldAmount,proto3" json:"soldAmount"` // @gotags: json:"soldAmount"
	// bought_amount: amount purchased
	BoughtAmount uint64 `protobuf:"varint,2,opt,name=bought_amount,json=boughtAmount,proto3" json:"boughtAmount"` // @gotags: json:"boughtAmount"
	// data: a generic data field which can allow a committee to execute specific functionality for the swap
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data"` // @gotags: json:"data"
	// sellers_receive_address: the address of the seller where the 'counter asset' will be received
	SellerReceiveAddress []byte `protobuf:"bytes,4,opt,name=SellerReceiveAddress,proto3" json:"sellerReceiveAddress"` // @gotags: json:"sellerReceiveAddress"
	// buyer_send_address: the address of the buyer where the 'counter asset' will be sent from
	BuyerSendAddress []byte `protobuf:"bytes,5,opt,name=BuyerSendAddress,proto3" json:"sellerReceiveAddress"` // @gotags: json:"sellerReceiveAddress"
	// sellers_send_address: the Canopy address the seller is selling and signing from
	SellersSendAddress []byte `protobuf:"bytes,6,opt,name=SellersSendAddress,proto3" json:"sellersSendAddress"` // @gotags: json:"sellersSendAddress"
	// OrderId: auto-populated by the state machine to assign the unique bytes to the order
	OrderId       []byte `protobuf:"bytes,7,opt,name=OrderId,proto3" json:"orderId"` // @gotags: json:"orderId"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventOrderBookSwap) Reset() {
	*x = EventOrderBookSwap{}
	mi := &file_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOrderBookSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOrderBookSwap) ProtoMessage() {}

func (x *EventOrderBookSwap) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOrderBookSwap.ProtoReflect.Descriptor instead.
func (*EventOrderBookSwap) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

func (x *EventOrderBookSwap) GetSoldAmount() uint64 {
	if x != nil {
		return x.SoldAmount
	}
	return 0
}

func (x *EventOrderBookSwap) GetBoughtAmount() uint64 {
	if x != nil {
		return x.BoughtAmount
	}
	return 0
}

func (x *EventOrderBookSwap) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EventOrderBookSwap) GetSellerReceiveAddress() []byte {
	if x != nil {
		return x.SellerReceiveAddress
	}
	return nil
}

func (x *EventOrderBookSwap) GetBuyerSendAddress() []byte {
	if x != nil {
		return x.BuyerSendAddress
	}
	return nil
}

func (x *EventOrderBookSwap) GetSellersSendAddress() []byte {
	if x != nil {
		return x.SellersSendAddress
	}
	return nil
}

func (x *EventOrderBookSwap) GetOrderId() []byte {
	if x != nil {
		return x.OrderId
	}
	return nil
}

type EventAutoPause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventAutoPause) Reset() {
	*x = EventAutoPause{}
	mi := &file_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAutoPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAutoPause) ProtoMessage() {}

func (x *EventAutoPause) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAutoPause.ProtoReflect.Descriptor instead.
func (*EventAutoPause) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

type EventAutoBeginUnstaking struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventAutoBeginUnstaking) Reset() {
	*x = EventAutoBeginUnstaking{}
	mi := &file_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAutoBeginUnstaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAutoBeginUnstaking) ProtoMessage() {}

func (x *EventAutoBeginUnstaking) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAutoBeginUnstaking.ProtoReflect.Descriptor instead.
func (*EventAutoBeginUnstaking) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{8}
}

type EventFinishUnstaking struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventFinishUnstaking) Reset() {
	*x = EventFinishUnstaking{}
	mi := &file_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventFinishUnstaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFinishUnstaking) ProtoMessage() {}

func (x *EventFinishUnstaking) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFinishUnstaking.ProtoReflect.Descriptor instead.
func (*EventFinishUnstaking) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{9}
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\x05types\"\xb0\x06\n" +
	"\x05Event\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12,\n" +
	"\x06reward\x18\x02 \x01(\v2\x12.types.EventRewardH\x00R\x06reward\x12)\n" +
	"\x05slash\x18\x03 \x01(\v2\x11.types.EventSlashH\x00R\x05slash\x12U\n" +
	"\x15dex_liquidity_deposit\x18\x04 \x01(\v2\x1f.types.EventDexLiquidityDepositH\x00R\x13dexLiquidityDeposit\x12X\n" +
	"\x16dex_liquidity_withdraw\x18\x05 \x01(\v2 .types.EventDexLiquidityWithdrawH\x00R\x14dexLiquidityWithdraw\x120\n" +
	"\bdex_swap\x18\x06 \x01(\v2\x13.types.EventDexSwapH\x00R\adexSwap\x12C\n" +
	"\x0forder_book_swap\x18\a \x01(\v2\x19.types.EventOrderBookSwapH\x00R\rorderBookSwap\x126\n" +
	"\n" +
	"auto_pause\x18\b \x01(\v2\x15.types.EventAutoPauseH\x00R\tautoPause\x12R\n" +
	"\x14auto_begin_unstaking\x18\t \x01(\v2\x1e.types.EventAutoBeginUnstakingH\x00R\x12autoBeginUnstaking\x12H\n" +
	"\x10finish_unstaking\x18\n" +
	" \x01(\v2\x1b.types.EventFinishUnstakingH\x00R\x0ffinishUnstaking\x12\x16\n" +
	"\x06height\x18[ \x01(\x04R\x06height\x12\x1c\n" +
	"\treference\x18\\ \x01(\tR\treference\x12\x18\n" +
	"\achainId\x18] \x01(\x04R\achainId\x12!\n" +
	"\fblock_height\x18^ \x01(\x04R\vblockHeight\x12\x1d\n" +
	"\n" +
	"block_hash\x18_ \x01(\fR\tblockHash\x12\x18\n" +
	"\aaddress\x18` \x01(\fR\aaddressB\x05\n" +
	"\x03msg\"%\n" +
	"\vEventReward\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x04R\x06amount\"$\n" +
	"\n" +
	"EventSlash\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x04R\x06amount\"U\n" +
	"\x18EventDexLiquidityDeposit\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x04R\x06amount\x12!\n" +
	"\flocal_origin\x18\x02 \x01(\bR\vlocalOrigin\"c\n" +
	"\x19EventDexLiquidityWithdraw\x12!\n" +
	"\flocal_amount\x18\x01 \x01(\x04R\vlocalAmount\x12#\n" +
	"\rremote_amount\x18\x02 \x01(\x04R\fremoteAmount\"\x91\x01\n" +
	"\fEventDexSwap\x12\x1f\n" +
	"\vsold_amount\x18\x01 \x01(\x04R\n" +
	"soldAmount\x12#\n" +
	"\rbought_amount\x18\x02 \x01(\x04R\fboughtAmount\x12!\n" +
	"\flocal_origin\x18\x03 \x01(\bR\vlocalOrigin\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\"\x98\x02\n" +
	"\x12EventOrderBookSwap\x12\x1f\n" +
	"\vsold_amount\x18\x01 \x01(\x04R\n" +
	"soldAmount\x12#\n" +
	"\rbought_amount\x18\x02 \x01(\x04R\fboughtAmount\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x122\n" +
	"\x14SellerReceiveAddress\x18\x04 \x01(\fR\x14SellerReceiveAddress\x12*\n" +
	"\x10BuyerSendAddress\x18\x05 \x01(\fR\x10BuyerSendAddress\x12.\n" +
	"\x12SellersSendAddress\x18\x06 \x01(\fR\x12SellersSendAddress\x12\x18\n" +
	"\aOrderId\x18\a \x01(\fR\aOrderId\"\x10\n" +
	"\x0eEventAutoPause\"\x19\n" +
	"\x17EventAutoBeginUnstaking\"\x16\n" +
	"\x14EventFinishUnstakingB&Z$github.com/canopy-network/canopy/libb\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_event_proto_goTypes = []any{
	(*Event)(nil),                     // 0: types.Event
	(*EventReward)(nil),               // 1: types.EventReward
	(*EventSlash)(nil),                // 2: types.EventSlash
	(*EventDexLiquidityDeposit)(nil),  // 3: types.EventDexLiquidityDeposit
	(*EventDexLiquidityWithdraw)(nil), // 4: types.EventDexLiquidityWithdraw
	(*EventDexSwap)(nil),              // 5: types.EventDexSwap
	(*EventOrderBookSwap)(nil),        // 6: types.EventOrderBookSwap
	(*EventAutoPause)(nil),            // 7: types.EventAutoPause
	(*EventAutoBeginUnstaking)(nil),   // 8: types.EventAutoBeginUnstaking
	(*EventFinishUnstaking)(nil),      // 9: types.EventFinishUnstaking
}
var file_event_proto_depIdxs = []int32{
	1, // 0: types.Event.reward:type_name -> types.EventReward
	2, // 1: types.Event.slash:type_name -> types.EventSlash
	3, // 2: types.Event.dex_liquidity_deposit:type_name -> types.EventDexLiquidityDeposit
	4, // 3: types.Event.dex_liquidity_withdraw:type_name -> types.EventDexLiquidityWithdraw
	5, // 4: types.Event.dex_swap:type_name -> types.EventDexSwap
	6, // 5: types.Event.order_book_swap:type_name -> types.EventOrderBookSwap
	7, // 6: types.Event.auto_pause:type_name -> types.EventAutoPause
	8, // 7: types.Event.auto_begin_unstaking:type_name -> types.EventAutoBeginUnstaking
	9, // 8: types.Event.finish_unstaking:type_name -> types.EventFinishUnstaking
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_event_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_Reward)(nil),
		(*Event_Slash)(nil),
		(*Event_DexLiquidityDeposit)(nil),
		(*Event_DexLiquidityWithdraw)(nil),
		(*Event_DexSwap)(nil),
		(*Event_OrderBookSwap)(nil),
		(*Event_AutoPause)(nil),
		(*Event_AutoBeginUnstaking)(nil),
		(*Event_FinishUnstaking)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
